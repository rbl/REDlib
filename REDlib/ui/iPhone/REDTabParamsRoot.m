//
//  ParmyTabParams.m
//  Bumpy
//
//  Created by Tom Seago on 12/30/11.
//  Copyright 2011 Reality Box Labs LLC. All rights reserved.
//

#import "REDTabParamsRoot.h"

#import "REDlibInternal.h"
#import "REDRegistry.h"

#import "REDParamsNumberEditor.h"
#import "REDSliderView.h"
#import "REDWindow.h"

// hexdump -v -e '"0""x" 1/1 "%02x" ","' List.png 
char _gListBytes[] = {
    0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,0x00,0x00,0x0d,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x1c,0x00,0x00,0x00,0x1c,0x08,0x06,0x00,0x00,0x00,0x72,0x0d,0xdf,0x94,0x00,0x00,0x00,0x09,0x70,0x48,0x59,0x73,0x00,0x00,0x0b,0x13,0x00,0x00,0x0b,0x13,0x01,0x00,0x9a,0x9c,0x18,0x00,0x00,0x01,0x61,0x49,0x44,0x41,0x54,0x48,0x89,0xe5,0x94,0xbd,0x4a,0x03,0x41,0x14,0x85,0xbf,0x5d,0x8d,0xa2,0xa8,0x08,0x2a,0x01,0x7f,0x0b,0xdf,0xc0,0xa7,0xb0,0xf7,0x05,0x7c,0x0a,0x0b,0x8b,0x54,0x82,0x0a,0x56,0xfa,0x02,0x82,0x4f,0x20,0x36,0x82,0xa0,0xa0,0x60,0x23,0x58,0xd8,0xd8,0x06,0x42,0x08,0x09,0x22,0x8a,0x45,0x14,0xb3,0x1c,0x8b,0x75,0xc8,0xcd,0xb0,0x8d,0xb3,0x64,0x85,0xe4,0xc0,0xc0,0xdd,0xbd,0xec,0x9c,0xbb,0x77,0xee,0x37,0x91,0x24,0x8a,0x54,0x5c,0xa8,0xdb,0x50,0x18,0x8e,0x9a,0x78,0x15,0xd8,0x07,0x96,0x81,0x23,0xe0,0xc2,0xe4,0xc6,0x80,0x73,0xa0,0x1c,0xe8,0xf3,0x04,0x6c,0x03,0x20,0xc9,0xad,0x33,0x75,0xd5,0x92,0xb4,0x68,0x72,0xe3,0x92,0x9a,0x0a,0xd7,0x83,0xdb,0xcb,0xb6,0xd4,0x56,0x3f,0x0b,0x4c,0x78,0x55,0x7e,0x07,0xfe,0x1d,0x40,0xc7,0x05,0xb6,0xa5,0x07,0xc0,0x3a,0xb0,0x00,0x1c,0x03,0xd5,0x8c,0x8f,0x92,0xbc,0x86,0x91,0xc7,0xe1,0x1c,0x30,0x09,0xd4,0xbc,0x0f,0x22,0x60,0xc5,0x2b,0xf0,0x2f,0xfa,0x02,0xea,0x59,0x86,0x7d,0xd7,0xbf,0x62,0xe1,0x9e,0x4b,0x40,0xdb,0x7b,0x1f,0x91,0x0e,0x51,0x14,0xe8,0x93,0x00,0x9f,0xbe,0xe1,0x06,0x70,0x42,0x3a,0xad,0x7b,0xc0,0xa9,0xc9,0x4d,0x01,0xf7,0x84,0x73,0x78,0x07,0x6c,0x01,0x3d,0x1c,0x5e,0x1a,0x6e,0x5e,0x24,0x2d,0x99,0xdc,0x4c,0x4e,0x0e,0x6f,0xb2,0x38,0x2c,0x44,0xb6,0xa5,0xbb,0xc0,0x34,0xdd,0x96,0xd6,0x4d,0x4e,0x40,0x8b,0xf0,0x33,0x7c,0x75,0x81,0x8f,0x45,0xdf,0x87,0x66,0xf8,0x38,0x9c,0x27,0x6d,0x9d,0x7f,0xb5,0xc5,0xa4,0x57,0xdb,0x48,0xa0,0x4f,0x1b,0x68,0x00,0x3d,0x58,0x6c,0x4a,0xaa,0x4a,0x7a,0x97,0x54,0x91,0x14,0x7b,0x58,0xd4,0x24,0x75,0x02,0xd7,0x95,0xdb,0xcb,0x1a,0xde,0x1a,0x6e,0x3e,0x24,0xad,0x79,0x86,0x8d,0x1c,0x1c,0x5e,0x67,0x71,0xd8,0x34,0xf1,0x1b,0xbf,0x53,0x65,0x54,0x0a,0x6c,0x27,0x98,0xa3,0xb3,0x67,0xb8,0x43,0x3a,0xbe,0x65,0xe0,0xd0,0x2b,0x20,0x01,0x1e,0x49,0xcf,0x38,0x44,0xcf,0x2e,0x18,0x7c,0x2c,0x06,0xdf,0xf0,0x07,0x1b,0xbd,0xd5,0xd9,0xe3,0x50,0x75,0x1d,0x00,0x00,0x00,0x00,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82};

@interface REDTabParamsRoot()
-(void) processKeys;
@end

@implementation REDTabParamsRoot


-(id) init
{
    self = [super init];
    if (self)
    {
        self.title = @"Parameters";
        self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:[REDlibInternal sharedInstance] action:@selector(hideControlWindow)];

        _tableView = [[UITableView alloc] initWithFrame:self.view.bounds style:UITableViewStylePlain];

        _tableView.delegate = self;
        _tableView.dataSource = self;
        self.view = _tableView;

        NSData* data = [NSData dataWithBytesNoCopy:_gListBytes length:sizeof(_gListBytes)];
        self.tabBarItem.image = [UIImage imageWithData:data];
        [self processKeys];
    }
    return self;
}


-(void) processKeys
{
    NSMutableArray* sections = [NSMutableArray array];
    
    // Add a generic "general" section at the beginning
    NSMutableArray* generalRows = [NSMutableArray array];
    [sections addObject:[NSDictionary dictionaryWithObjectsAndKeys:generalRows, @"rows", @"General", @"title", @"yes", @"isGeneral", nil]];

    NSString* currentTitle = nil;
    NSMutableArray* currentSectionRows = nil;
    
    for (NSString* key in [REDRegistry sharedInstance].allKeys)
    {
        //NSLog(@"Processing key='%@'", key);
        
        if (currentTitle && [key hasPrefix:currentTitle])
        {
            // Add to current section
            NSString* suffix = [key substringFromIndex:currentTitle.length];
            
            [currentSectionRows addObject:suffix];
            //NSLog(@"  to existing section '%@'", currentTitle);
        }
        else
        {
            // It is a new section

            // Split the key into a title portion on the first space followed
            // by the rest of the key
            NSArray* components = [key componentsSeparatedByString:@" "];
            if (components.count == 1)
            {
                // Add it to the "general" category
                [generalRows addObject:key];
                //NSLog(@"  to general section");
            }
            else
            {
                // Make a new section for the first component
                // (importantly add a space to the end of it)
                currentTitle = [NSString stringWithFormat:@"%@ ", [components objectAtIndex:0]];
                currentSectionRows = [NSMutableArray array];
                
                [sections addObject:[NSDictionary dictionaryWithObjectsAndKeys:currentSectionRows, @"rows", currentTitle, @"title", nil]];

                NSString* suffix = [key substringFromIndex:currentTitle.length];                
                [currentSectionRows addObject:suffix];                
                //NSLog(@"  to new section '%@'", currentTitle);
            }
        }
    }
    
    // Get rid of the general one if we don't need it
    if (generalRows.count == 0)
    {
        [sections removeObjectAtIndex:0];
    }
    
    _sections = sections;
}

-(void) viewWillAppear:(BOOL)animated
{
    [_tableView reloadData];
}

#pragma -
#pragma UITableView DataSource & Delegate

-(UITableViewCell*) tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:@"cell"];
    if (!cell)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell"];
        CGRect frame = cell.frame;
        frame.size.width -= 2 * 40;
        cell.frame = frame;
    }
    
    NSDictionary* section = [_sections objectAtIndex:indexPath.section];
    
    NSArray* rows = [section objectForKey:@"rows"];
    NSString* subKey = [rows objectAtIndex:indexPath.row];
    
    NSString* fullKey;
    if ([section objectForKey:@"isGeneral"])
    {
        fullKey = subKey;
    }
    else
    {
        fullKey = [NSString stringWithFormat:@"%@%@", [section objectForKey:@"title"], subKey];
    }
    NSObject* obj = [[REDRegistry sharedInstance] currentObjectForKey:fullKey];
                   
    cell.textLabel.text = subKey;
    cell.detailTextLabel.text = [obj description];
    
    return cell;
}

-(NSInteger) numberOfSectionsInTableView:(UITableView *)tableView
{
    return _sections.count;
}

-(NSInteger) tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)sectionIx
{
    NSDictionary* section = [_sections objectAtIndex:sectionIx];
    
    NSArray* rows = [section objectForKey:@"rows"];
    return rows.count;
}

-(NSString*) tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)sectionIx
{
    NSDictionary* section = [_sections objectAtIndex:sectionIx];
    return [section objectForKey:@"title"];
}

-(void) tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    NSDictionary* section = [_sections objectAtIndex:indexPath.section];
    
    NSArray* rows = [section objectForKey:@"rows"];
    NSString* subKey = [rows objectAtIndex:indexPath.row];
    
    NSString* fullKey;
    if ([section objectForKey:@"isGeneral"])
    {
        fullKey = subKey;
    }
    else
    {
        fullKey = [NSString stringWithFormat:@"%@%@", [section objectForKey:@"title"], subKey];
    }
    NSObject* obj = [[REDRegistry sharedInstance] currentObjectForKey:fullKey];
    
    BOOL animated = NO;
    if ([obj isKindOfClass:[NSNumber class]])
    {
        REDSliderView* slider = [[REDSliderView alloc] initForKey:fullKey withNumber:(NSNumber*)obj];
        [[REDWindow sharedInstance] showFloatingView:slider];
    }
    else
    {
        // For things we can't go to another screen for, animate the deselect
        animated = YES;
    }
    
    [tableView deselectRowAtIndexPath:indexPath animated:animated];
}


@end
